using System;
using System.IO;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PractWork6
{
    // Выполнил Фельдман

    // 1.   Изменить программу вывода таблицы функции так, чтобы можно было передавать функции
    //      типа double (double, double). Продемонстрировать работу на функции с функцией a* x^2 и
    //      функцией a* sin(x).
    // 2.   Модифицировать программу нахождения минимума функции так, чтобы можно было
    //      передавать функцию в виде делегата.
    //      а) Сделать меню с различными функциями и представить пользователю выбор, для какой
    //      функции и на каком отрезке находить минимум.Использовать массив(или список) делегатов,
    //      в котором хранятся различные функции.
    //      б) * Переделать функцию Load, чтобы она возвращала массив считанных значений.Пусть она
    //      возвращает минимум через параметр(с использованием модификатора out).



    delegate double Function(double x, double y);   // 1 задание

    delegate double Function2(double x);            // 2 задание

    class Program
    {
        //---------------------Задание 1---------------------
        public static void Func(Function F, double x, double a, double maxX)
        {
            while (x <= maxX)
            {
                Console.WriteLine($"| {x:f2} | {F(x, a)} |");
                x += 1;
            }
        }

        public static double Func1(double x, double a)
        {
            return a * x * x;
        }

        public static double Func2(double x, double a)
        {
            return a * Math.Sin(x);
        }


        //---------------------Задание 2---------------------
        public static double FuncX(double x)
        {
            return x * x - 50 * x + 10;
        }

        public static double SinX(double x)
        {
            return Math.Pow(Math.Sin(x), 2);
        }

        public static double CosX(double x)
        {
            return x * Math.Cos(x);
        }

        public static double Parabola(double x)
        {
            return 6 * x * x + 3 * x + 5;
        }
            
        public static void SaveFunc(string fileName, Function2 F, double a, double b, double h)
        {
            FileStream fs = new FileStream(fileName, FileMode.Create, FileAccess.Write);
            BinaryWriter bw = new BinaryWriter(fs);
            double x = a;
            while (x <= b)
            {
                bw.Write(F(x));
                x += h;
            }
            bw.Close();
            fs.Close();
        }

        public static double[] FuncMin(string fileName, out double min)
        {
            FileStream fs = new FileStream(fileName, FileMode.Open, FileAccess.Read);
            BinaryReader bw = new BinaryReader(fs);
            min = double.MaxValue;
            var values = new List<double>();
            for (int i = 0; i < fs.Length / sizeof(double); i++)
            {
                values.Add(bw.ReadDouble());
                if (values[i] < min) min = values[i];
            }
            double[] d = new double[values.Count];
            for (int i = 0; i < values.Count; i++)
            {
                d[i] = values[i];
            }
            bw.Close();
            fs.Close();
            return d;
        }



        static void Main(string[] args)
        {
            var delegates = new List<Function2>();
            delegates.Add(FuncX);
            delegates.Add(SinX);
            delegates.Add(CosX);
            delegates.Add(Parabola);

            int choice = 0; // Выбор операции

            Console.WriteLine("Введите номер операции:");
            choice = Convert.ToInt32(Console.ReadLine());
            switch(choice)
            {
                case 1: // Задание 1
                    {
                        Func(Func1, 2, 1, 10);
                        break;
                    }
                case 2:
                    {
                        Func(Func2, 2, 1, 10);
                        break;
                    }
                case 3: // Задание 2
                    {
                        Console.WriteLine("Введите минимальное значение Х");
                        double a = Convert.ToDouble(Console.ReadLine());
                        Console.WriteLine("Введите максимальное значение Х");
                        double b = Convert.ToDouble(Console.ReadLine());
                        Console.WriteLine("Введите шаг");
                        double h = Convert.ToDouble(Console.ReadLine());

                        Console.WriteLine("Введите номер функции (0-3)");
                        int funcNumber = Convert.ToInt32(Console.ReadLine());

                        SaveFunc("data.bin", delegates[funcNumber], a, b, h);
                        double[] result = FuncMin("data.bin", out double min);
                        //Console.WriteLine(FuncMin("data.bin", out double min));
                        for (int i = 0; i < result.Length; i++)
                        {
                            Console.WriteLine(result[i]);
                        }
                        Console.WriteLine("min = " + min);
                        break;
                    }
                default: break;
            }

            Console.ReadKey();
        }
    }
}